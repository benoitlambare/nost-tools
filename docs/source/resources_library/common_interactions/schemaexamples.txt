super().initialize(init_time)
        self.grounds = pd.DataFrame(
            {
                "groundId": pd.Series([], dtype="int"),
                "latitude": pd.Series([], dtype="float"),
                "longitude": pd.Series([], dtype="float"),
                "elevAngle": pd.Series([], dtype="float"),
                "operational": pd.Series([], dtype="bool"),
            }
        )

self.app.send_message(
    "location",
    SatelliteStatus(
        id=i,
        name=satellite.name,
        latitude=subpoint.latitude.degrees,
        longitude=subpoint.longitude.degrees,
        altitude=subpoint.elevation.m,
        radius=sensorRadius,
        commRange=self.isInRange[i],
        time=constellation.get_time(),
        ).json(),
)

super().initialize(init_time)
        self.tasking = pd.DataFrame(
            {
                "name": pd.Series([], dtype="str"),
                "description": pd.Series([], dtype="str"),
                "latitude": pd.Series([], dtype="float"),
                "longitude": pd.Series([], dtype="float"),
                "windowOpen": pd.Series([], dtype="datetime"),
                "windowClose": pd.Series([], dtype="datetime"),
                "priority": pd.Series([], dtype="float")
            }
        )

super().initialize(init_time)
        self.tasking = pd.DataFrame(
            {
                "name": pd.Series([], dtype="str"),
                "taskingRequestID": pd.Series([], dtype="str"),
                "numOrders": pd.Series([], dtype="int"),
                "cost": pd.Series([], dtype="float")
            }
        )